<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.akul.taskslist.repository.UserRepository">
    <resultMap id="UserResultMap" type="com.akul.taskslist.domain.user.User" autoMapping="false">
        <id property="id" column="user_id"/>
        <result property="name" column="user_name"/>
        <result property="username" column="user_username"/>
        <result property="password" column="user_password"/>
        <collection property="roles"
                    ofType="com.akul.taskslist.domain.user.Role"
                    autoMapping="false">
                <result property="name" column="user_role_role"/>
        </collection>
        <collection property="task"
                    ofType="com.akul.taskslist.domain.task.Task"
                    resultMap= "com.akul.taskslist.repository.TaskRepository.TaskResultMap"
                    autoMapping="false"/>

    </resultMap>

    <select id="findUserById" resultMap="UserResultMap">
        SELECT u.id       as user_id,
        u.name            as user_name,
        u.username        as user_username,
        u.password        as user_password,
        ur.role           as user_role_role,
        t.id              as task_id,
        t.title           as task_title,
        t.description     as task_description,
        t.expiration_date as task_expiration_date,
        t.status          as task_status
        FROM taskslist.users u
        JOIN taskslist.users_roles ur on u.id = ur.user_id
        JOIN taskslist.users_tasks ut on u.id = ut.user_id
        JOIN taskslist.tasks t on t.id = ut.task_id
        WHERE u.id = #{id}
    </select>

    <select id="findUserByUsername" resultMap="UserResultMap">
                        SELECT u.id       as user_id,
                        u.name            as user_name,
                        u.username        as user_username,
                        u.password        as user_password,
                        ur.role           as user_role_role,
                        t.id              as task_id,
                        t.title           as task_title,
                        t.description     as task_description,
                        t.expiration_date as task_expiration_date,
                        t.status          as task_status
                        FROM taskslist.users u
                        JOIN taskslist.users_roles ur on u.id = ur.user_id
                        JOIN taskslist.users_tasks ut on u.id = ut.user_id
                        JOIN taskslist.tasks t on t.id = ut.task_id
                        WHERE u.username = #{username}
    </select>

    <update id="update">
        UPDATE taskslist.users
        SET name = #{name},
        username = #{username},
        password = #{password},
        WHERE id = #{id}
    </update>

    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO taskslist.users (name, username, password)
        VALUES (#{name}, #{username}, #{password})
    </insert>
    
    <insert id="insertUserRole">
        INSERT INTO taskslist.users_roles (user_id, role)
        VALUES (#{userId}, #{role})
    </insert>

    <select id="isTaskOwner" resultType= "boolean" >
        SELECT exists(
        SELECT 1
        FROM taskslist.users_tasks
        WHERE user_id = #{userId}
        AND   task_id = #{taskId}
        )
    </select>


    <delete id="delete">
        DELETE FROM taskslist.users
        WHERE id = #{id}
    </delete>


</mapper>